server.port=8083
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.bootstrap.servers=pkc-ep9mm.us-east-2.aws.confluent.cloud:9092
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="2FEQ6NTBCCLYWS6R" password="fknEeUiPT+oQuB1JkYNmZnJsw7Kp/0CLAmMqKdx+YmaFRdhA35do67JzAUkj4bw1";
spring.kafka.properties.security.protocol=SASL_SSL

#Consumer
spring.kafka.consumer.group-id: proveedor
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


#Producer
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

#spring.kafka.bootstrap-servers = $ {CLOUDKARAFKA_BROKERS}
#spring.kafka.properties.security.protocol = SASL_SSL
#spring.kafka.properties.sasl.mechanism = SCRAM-SHA-256
#spring.kafka.properties.sasl.jaas.config = org.apache.kafka.common.security.scram.ScramLoginModule nombre de usuario requerido = " $ {CLOUDKARAFKA_USERNAME} "  contraseña = " $ {CLOUDKARAFKA_PASSWORD} " ;
#spring.kafka.consumer.group-id = $ {CLOUDKARAFKA_USERNAME} -consumers
#spring.kafka.consumer.auto-offset-reset = último
#spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.properties.spring.json.trusted.packages = sample.kafka
#cloudkarafka.topic = $ {CLOUDKARAFKA_USERNAME} -default